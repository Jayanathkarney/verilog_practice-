//MOORE 1011 OVERLAPPING SEQUENCE DETECTOR
module moore_1011(clk,in,rst,out);
input clk,in,rst;
output reg out;
reg [0:2]ps,ns;
parameter s0=0,s1=1,s2=2,s3=3,s4=4;

always @(posedge clk or posedge rst)
if(rst) ps<=s0;
else ps<=ns;


always @(ps,in)
begin
case(ps)
s0: if(in) ns<=s1; else ns<=s0;
s1: if(in) ns<=s1;else ns<=s2;
s2: if(in) ns<=s3;else ns<=s0;
s3: if(in) ns<=s4;else ns<=s2;
s4: if(in) ns<=s1;else ns<=s2;
default: ns<=s0;
endcase
end

always @(*)
begin
case(ps)
s4: out=1'b1;
default:out=1'b0;
endcase
end

endmodule


////// moore 1011 test bench//////

module tb;
reg clk,rst,in;
wire out;

moore_1011 uut(.clk(clk),.rst(rst),.in(in),.out(out));
initial begin
in=0;clk=0; rst=0;
#1 rst=1 ; #2 rst=0;
#6 in=1;#4 in=0 ;#4 in=1 ;#4 in=1; #4 in=0; #4 in=1; #4 in=1;
#4 $finish;
end
always #2 clk=~clk;
endmodule
